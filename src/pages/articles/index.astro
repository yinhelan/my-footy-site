---
/** 文章索引页：日期倒序 + 摘要 + 阅读时长 + 搜索 + 标签筛选 */
const site = Astro.site ?? new URL('https://my-footy-site.pages.dev/');
const canonical = new URL('/articles/', site).toString();

/** 读取文章模块（frontmatter/url）与原文（用于估算阅读时长） */
const mdMods = import.meta.glob('./*.md', { eager: true });
const rawMods = import.meta.glob('./*.md', { eager: true, as: 'raw' });

function minutesFromRaw(raw = '') {
  const s = String(raw);
  const nofm = s.replace(/^---[\s\S]*?---\s*/, ''); // 去 frontmatter
  const words = (nofm.match(/\b[\p{L}\p{N}’']+\b/gu) ?? []).length;
  return Math.max(1, Math.round(words / 220)); // 220 wpm 估算
}

const posts = Object.entries(mdMods).map(([path, mod]) => {
  const fm = mod.frontmatter ?? {};
  const raw = rawMods[path] ?? '';
  const minutes = minutesFromRaw(raw);
  const date = fm.date ? new Date(fm.date) : undefined;
  const dateNum = date ? date.getTime() : 0;

  return {
    path,
    url: mod.url,
    title: fm.title ?? path.split('/').pop().replace('.md',''),
    description: fm.description ?? '',
    date,
    dateNum,
    tags: Array.isArray(fm.tags) ? fm.tags : [],
    minutes,
  };
}).sort((a,b) => b.dateNum - a.dateNum);

const allTags = Array.from(new Set(posts.flatMap(p=>p.tags))).sort((a,b)=>a.localeCompare(b));
const style = `
  :root{--bd:#e5e7eb;--m:#666;--c:#111;--link:#0a58ca}
  *{box-sizing:border-box}
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto; color:var(--c); max-width:980px; margin:24px auto; padding:0 16px}
  header{margin:6px 0 18px}
  nav a{color:var(--link); text-decoration:none; margin-right:10px}
  nav a:hover{text-decoration:underline}
  h1{margin:0 0 10px}
  .controls{display:flex; gap:12px; flex-wrap:wrap; margin:8px 0 16px}
  .search{flex:1 1 280px}
  .search input{width:100%; padding:10px 12px; border:1px solid var(--bd); border-radius:10px}
  .tags{display:flex; flex-wrap:wrap; gap:8px}
  .chip{border:1px solid var(--bd); border-radius:999px; padding:6px 10px; cursor:pointer; background:#fff; font-size:14px}
  .chip.active{background:#111;color:#fff;border-color:#111}
  .list{display:grid; grid-template-columns:repeat(2,minmax(0,1fr)); gap:12px}
  @media(max-width:820px){ .list{grid-template-columns:1fr} }
  .card{border:1px solid var(--bd); border-radius:14px; padding:14px}
  .meta{color:var(--m); font-size:13px; margin:6px 0}
  .meta span{margin-right:10px}
  .card h3{margin:0 0 6px; font-size:20px; line-height:1.3}
  a{color:var(--link)}
  .empty{color:var(--m); margin-top:12px}
`;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Articles · Footy Analytics</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="description" content="Notes and tutorials for football analytics, with practical tools." />
    <link rel="canonical" href={canonical} />
    <link rel="alternate" type="application/rss+xml" title="Footy Analytics RSS" href="/rss.xml" />
    <style is:global set:html={style}></style>
  </head>
  <body>
    <header>
      <nav>
        <a href="/">Home</a>·
        <a href="/articles">Articles</a>·
        <a href="/tools/poisson">Poisson</a>·
        <a href="/tools/implied-odds">Implied odds</a>·
        <a href="/tools/kelly">Kelly</a>·
        <a href="/rss.xml">RSS</a>
      </nav>
      <h1>Articles</h1>
    </header>

    <section class="controls">
      <div class="search">
        <input id="q" type="search" placeholder="Search title or description..." />
      </div>
      <div class="tags" id="tags">
        <button class="chip active" data-tag="">All</button>
        {allTags.map(t => <button class="chip" data-tag={t}>{t}</button>)}
      </div>
    </section>

    <section class="list" id="list">
      {posts.map(p => (
        <article class="card"
          data-title={(p.title||'').toLowerCase()}
          data-desc={(p.description||'').toLowerCase()}
          data-tags={(p.tags||[]).join(',').toLowerCase()}>
          <h3><a href={p.url}>{p.title}</a></h3>
          <div class="meta">
            {p.date && <span>{new Date(p.date).toLocaleDateString('en-GB')}</span>}
            <span>{p.minutes} min read</span>
            {p.tags && p.tags.length>0 && <span>· {p.tags.join(', ')}</span>}
          </div>
          {p.description && <p>{p.description}</p>}
        </article>
      ))}
    </section>

    <p id="empty" class="empty" style="display:none">No posts match your filters.</p>

    <script>
      const $ = (s)=>document.querySelector(s);
      const $$ = (s)=>Array.from(document.querySelectorAll(s));
      const list = $('#list');
      const empty = $('#empty');
      const input = $('#q');
      const chips = $$('#tags .chip');

      function applyFromURL(){
        const sp = new URLSearchParams(location.search);
        const q = sp.get('q') || '';
        const tag = (sp.get('tag') || '').toLowerCase();
        if(q) input.value = q;
        chips.forEach(c=>{
          c.classList.toggle('active', (c.dataset.tag||'').toLowerCase()===tag);
        });
        filter();
      }

      function currentTag(){
        const act = chips.find(c=>c.classList.contains('active'));
        return (act?.dataset.tag || '').toLowerCase();
      }

      function filter(){
        const q = (input.value||'').toLowerCase().trim();
        const t = currentTag();
        let shown = 0;

        list.querySelectorAll('.card').forEach(card=>{
          const title = card.dataset.title || '';
          const desc = card.dataset.desc || '';
          const tags = card.dataset.tags || '';
          const hitQ = !q || title.includes(q) || desc.includes(q);
          const hitT = !t || tags.split(',').includes(t);
          const vis = hitQ && hitT;
          card.style.display = vis ? '' : 'none';
          if(vis) shown++;
        });

        empty.style.display = shown ? 'none' : '';
        const sp = new URLSearchParams();
        if(q) sp.set('q', q);
        if(t) sp.set('tag', t);
        const url = location.pathname + (sp.toString()?('?'+sp.toString()):'');
        history.replaceState(null, '', url);
      }

      input.addEventListener('input', ()=>filter());
      chips.forEach(chip=>{
        chip.addEventListener('click', ()=>{
          chips.forEach(c=>c.classList.remove('active'));
          chip.classList.add('active');
          filter();
        });
      });

      window.addEventListener('DOMContentLoaded', applyFromURL);
    </script>
  </body>
</html>
