---
import BaseLayout from '../../layouts/BaseLayout.astro';
import ResultsExport from '../../components/ResultsExport.astro';

const meta = {
  title: 'Implied → Fair Odds',
  description: 'Convert market odds to implied probabilities, remove overround to get fair odds.',
  lang: 'en'
};
---
<BaseLayout {...meta}>
  <h1 style="margin:.2rem 0">Implied → Fair Odds</h1>
  <div class="page-actions" style="display:flex;gap:8px;margin:12px 0">
    <button type="button" class="btn" id="btn-fill-example" data-testid="fill-example">填充示例</button>
  </div>

  <form id="tool-form" style="display:grid;gap:10px;max-width:680px">
    <style>
      .field-error{display:block;color:#d32f2f;font-size:.75rem;margin-top:4px;}
      .btn[disabled]{opacity:.6;cursor:not-allowed;}
    </style>
    <label style="display:flex;flex-direction:column;gap:4px">
      赔率列表（逗号或空格分隔）
      <textarea id="odds" rows="2" placeholder="2.30,3.30,3.10"></textarea>
      <small class="field-error" data-error-for="odds"></small>
    </label>

    <div style="display:flex;gap:10px;flex-wrap:wrap;align-items:center">
      <label style="display:flex;flex-direction:column;gap:4px">格式
        <select id="format">
          <option value="decimal" selected>十进制</option>
          <option value="american">美式</option>
          <option value="fractional">分数</option>
        </select>
      </label>
      <label style="display:flex;flex-direction:column;gap:4px">去水方法
        <select id="method">
          <option value="power" selected>Power</option>
          <option value="multiplicative">Multiplicative</option>
          <option value="basic">Basic</option>
          <option value="shin">Shin</option>
        </select>
      </label>
    </div>

    <div style="display:flex;gap:8px;flex-wrap:wrap">
      <button type="button" id="btn-calc" class="btn">Calculate</button>
      <button type="reset" class="btn">Reset</button>
    </div>
  </form>

  <div id="out" class="card" style="margin-top:12px"></div>

  <ResultsExport />

  <script type="module">
    import { devig } from '/src/lib/odds/devig.ts';
    import { toDecimal } from '/src/lib/odds/format.ts';

    const oddsInput = document.querySelector('textarea#odds');
    const formatSelect = document.getElementById('format');
    const methodSelect = document.getElementById('method');
    const calcBtn = document.getElementById('btn-calc');
    const fillBtn = document.getElementById('btn-fill-example');
    const exportBtn = document.getElementById('btn-export-csv');
    const out = document.getElementById('out');

    let lastRows = [];

    function renderTable(decimals, raw, fair, method, overround) {
      const header = ['#', 'Decimal Odds', 'Raw Prob', 'Fair Prob', 'Method'];
      const body = decimals
        .map((odds, index) =>
          `<tr><td>${index + 1}</td><td>${odds.toFixed(6)}</td><td>${raw[index].toFixed(6)}</td><td>${fair[index].toFixed(6)}</td><td>${method}</td></tr>`
        )
        .join('');
      return `<div style="overflow:auto"><table style="border-collapse:collapse;min-width:520px">`
        + `<thead><tr>${header.map((h) => `<th style="text-align:left;padding:6px 8px;color:#64748B;font-weight:600">${h}</th>`).join('')}</tr></thead>`
        + `<tbody>${body}</tbody>`
        + `<tfoot><tr><td colspan="5">overround: ${overround.toFixed(6)}</td></tr></tfoot>`
        + `</table></div>`;
    }

    function calc() {
      if (!(oddsInput instanceof HTMLTextAreaElement) || !out) return;
      const format = (formatSelect instanceof HTMLSelectElement ? formatSelect.value : 'decimal');
      const method = (methodSelect instanceof HTMLSelectElement ? methodSelect.value : 'power');
      const decimals = toDecimal(format, oddsInput.value);
      if (!decimals.length) {
        out.textContent = '请输入有效赔率（至少 2 项）';
        lastRows = [];
        return;
      }
      try {
        const { overround, raw, fair } = devig(method, decimals);
        out.innerHTML = renderTable(decimals, raw, fair, method, overround);
        lastRows = decimals.map((odds, index) => ({
          market: 'list',
          outcome: `#${index + 1}`,
          odds_decimal: odds.toFixed(6),
          raw_prob: raw[index].toFixed(6),
          method,
          fair_prob: fair[index].toFixed(6),
          overround: overround.toFixed(6)
        }));
      } catch (error) {
        out.textContent = (error instanceof Error) ? error.message : '计算失败';
        lastRows = [];
      }
    }

    window.__implied_calc__ = calc;

    calcBtn?.addEventListener('click', calc);

    fillBtn?.addEventListener('click', () => {
      if (oddsInput instanceof HTMLTextAreaElement) oddsInput.value = '2.30,3.30,3.10';
      calc();
    });

    exportBtn?.addEventListener('click', () => {
      if (!lastRows.length) return;
      const headers = ['market', 'outcome', 'odds_decimal', 'raw_prob', 'method', 'fair_prob', 'overround'];
      const csv = [headers.join(','), ...lastRows.map(row => headers.map((h) => row[h]).join(','))].join('
');
      const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
      const a = document.createElement('a');
      a.href = URL.createObjectURL(blob);
      a.download = 'implied-odds.csv';
      a.click();
      URL.revokeObjectURL(a.href);
    });

    calc();
  </script>

</BaseLayout>
