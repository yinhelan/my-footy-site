---
import BaseLayout from '../../layouts/BaseLayout.astro';

const meta = {
  title: 'Implied → Fair Odds',
  description: 'Convert market odds to implied probabilities, remove overround to get fair odds.',
  lang: 'en'
};
---
<BaseLayout {...meta}>
  <h1 style="margin:.2rem 0">Implied → Fair Odds</h1>
  <div class="page-actions" style="display:flex;gap:8px;margin:12px 0">
    <button type="button" class="btn" id="btn-fill-example" data-testid="fill-example">填充示例</button>
  </div>

  <form id="tool-form" style="display:grid;gap:10px;max-width:680px">
    <style>
      .field-error{display:block;color:#d32f2f;font-size:.75rem;margin-top:4px;}
      .btn[disabled]{opacity:.6;cursor:not-allowed;}
    </style>
    <label style="display:flex;flex-direction:column;gap:4px">
      赔率列表（逗号或空格分隔）
      <textarea id="odds" rows="2" placeholder="2.30,3.30,3.10"></textarea>
      <small class="field-error" data-error-for="odds"></small>
    </label>

    <div style="display:flex;gap:10px;flex-wrap:wrap;align-items:center">
      <label style="display:flex;flex-direction:column;gap:4px">格式
        <select id="format">
          <option value="decimal" selected>十进制</option>
          <option value="american">美式</option>
          <option value="fractional">分数</option>
        </select>
      </label>
      <label style="display:flex;flex-direction:column;gap:4px">去水方法
        <select id="method">
          <option value="power" selected>Power</option>
          <option value="multiplicative">Multiplicative</option>
          <option value="basic">Basic</option>
          <option value="shin">Shin</option>
        </select>
      </label>
    </div>

    <div style="display:flex;gap:8px;flex-wrap:wrap">
      <button type="button" id="btn-calc" class="btn">Calculate</button>
      <button type="reset" class="btn">Reset</button>
    </div>
  </form>

  <div id="out" class="card" style="margin-top:12px"></div>

  <script type="module">
    import { devig } from '/src/lib/odds/devig.ts';
    import { toDecimal } from '/src/lib/odds/format.ts';

    function compute() {
      const fmt = (document.getElementById('format')?.value) || 'decimal';
      const method = (document.getElementById('method')?.value) || 'power';
      const input = (document.getElementById('odds')?.value) || '';
      let oddsDec = [];
      try {
        oddsDec = toDecimal(fmt, input);
      } catch (error) {
        console.error('format parse failed', error);
        oddsDec = [];
      }
      const out = document.getElementById('out');
      if (!out) return;
      if (oddsDec.length < 2) {
        out.textContent = '请输入有效赔率（至少 2 项）';
        return;
      }

      const { overround, raw, fair } = devig(method, oddsDec);
      const rows = oddsDec.map((o, i) => ({
        market: '1x2',
        outcome: i + 1,
        odds_decimal: o.toFixed(2),
        raw_prob: raw[i].toFixed(6),
        method,
        fair_prob: fair[i].toFixed(6),
        overround: overround.toFixed(6),
      }));

      const trs = rows
        .map((r) => `<tr><td>${r.outcome}</td><td>${r.odds_decimal}</td><td>${r.raw_prob}</td><td>${r.fair_prob}</td></tr>`)
        .join('');
      out.innerHTML = `<table><thead><tr><th>#</th><th>odds</th><th>raw</th><th>fair</th></tr></thead>
        <tbody>${trs}</tbody><tfoot><tr><td colspan="4">overround: ${overround.toFixed(6)} (${method})</td></tr></tfoot></table>`;

      let host = document.getElementById('export-host');
      if (!host) {
        host = document.createElement('div');
        host.id = 'export-host';
        out.after(host);
      }
      import('/src/lib/react/renderResultsExport.tsx')
        .then((m) => {
          m.renderResultsExport(host, {
            headers: ['market', 'outcome', 'odds_decimal', 'raw_prob', 'method', 'fair_prob', 'overround'],
            rows,
            filename: 'implied.csv',
          });
        })
        .catch((err) => console.error('export mount failed', err));
    }

    const btn = document.getElementById('btn-calc');
    if (btn) btn.addEventListener('click', (e) => { e.preventDefault(); compute(); });
    const fillBtn = document.getElementById('btn-fill-example');
    if (fillBtn) fillBtn.addEventListener('click', () => {
      const oddsEl = document.getElementById('odds');
      if (oddsEl instanceof HTMLTextAreaElement && !oddsEl.value) oddsEl.value = '2.30,3.30,3.10';
      compute();
    });
    const fmtSel = document.getElementById('format');
    if (fmtSel) fmtSel.addEventListener('change', compute);
    const methodSel = document.getElementById('method');
    if (methodSel) methodSel.addEventListener('change', () => {
      window.dispatchEvent(new CustomEvent('analytics', { detail: { event: 'devig_method_change', tool: 'implied', to: methodSel.value } }));
      compute();
    });

    window.__implied_calc__ = compute;
    compute();
  </script>
</BaseLayout>
<script type="module" src="/src/client/inline/implied-fallback.js"></script>
